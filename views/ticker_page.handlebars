<div class="ticker-page-header">


    <div class="leftCont">
          <div class="top-logo">
        <div class="circle-logo"><img class="company-logo" src="https://storage.googleapis.com/iex/api/logos/{{stock.quote.symbol}}.png"></div>
        <span class="ticker-badge" id="stockSymbol">{{stock.quote.symbol}}</span>
    </div>
    <h1><b>{{stock.quote.companyName}}</b></h1>
    <div class="price">
        <div>${{stock.quote.latestPrice}}</div>
       {{#negPosChange stock.quote.change}}
             {{test}}
        {{/negPosChange}}
        </div>
    <div class="subtext">{{stock.quote.primaryExchange}}</div>
    </div>

<div class="rightCont">
    <div id="chart"><div id="tooltip"></div></div>

</div>
</div>


<div class="row">
<ul class="nav nav-pills mb-3 ticker-page-nav" id="pills-tab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="pills-overview-tab" data-bs-toggle="pill" data-bs-target="#pills-overview" type="button" role="tab" aria-controls="pills-overview" aria-selected="true">Overview</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="pills-company-tab" data-bs-toggle="pill" data-bs-target="#pills-company" type="button" role="tab" aria-controls="pills-company" aria-selected="false">Company</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="pills-contact-chart" data-bs-toggle="pill" data-bs-target="#pills-chart" type="button" role="tab" aria-controls="pills-chart" aria-selected="false">News</button>
  </li>
</ul>
<div class="tab-content" id="pills-tabContent">
  <div class="tab-pane fade show active" id="pills-overview" role="tabpanel" aria-labelledby="pills-overview-tab">
    <div class="row">


        <!--OVERVIEW TAB-->
    <div class="mb-3 col-12 col-md-4 tickerPage-topTable">

         <div><strong>Latest Price: </strong><span>${{stock.quote.latestPrice}}</span></div>
         <div><strong>Previous Close: </strong><span>${{stock.quote.previousClose}}</span></div>
         <div><strong>Percent Change: </strong><span>
           {{#roundPercent stock.quote.changePercent}}
             {{test}}
        {{/roundPercent}}
         </span></div>
         <div><strong>Market Cap: </strong><span>${{#commas stock.quote.marketCap}}
             {{test}}
        {{/commas}}</span></div>
         <div><strong>YTD Change: </strong><span>  {{#roundPercent stock.quote.ytdChange}}
             {{test}}
        {{/roundPercent}}</span></div>
         <div><strong>52 Week High: </strong><span>${{stock.quote.week52High}}</span></div>
         <div><strong>52 Week Low:</strong><span>${{stock.quote.week52Low}}</span></div>
    </div>
        <div class="mb-3 col-12 col-md-4 tickerPage-topTable">
         <div><strong>P/E Ratio: </strong><span>
           {{#peRatio stock.stats.peRatio}}
                {{test}}
        {{/peRatio}}
         </span></div>
         <div><strong>Beta: </strong><span>
            {{#basicRound stock.stats.beta}}
             {{test}}
        {{/basicRound}}
         </span></div>
         <div><strong>TTM EPS: </strong><span>${{stock.stats.ttmEPS}}</span></div>
         <div><strong>TTM Dividend Rate: </strong><span>{{#basicRound stock.stats.ttmDividendRate}}
             {{test}}
        {{/basicRound}}</span></div>
         <div><strong>Dividend Yield: </strong><span>
             {{#basicPercent stock.stats.dividendYield}}
             {{test}}
        {{/basicPercent}}%
         </span></div>
         <div><strong>Next Earnings Date: </strong><span>{{stock.stats.nextEarningsDate}}</span></div>
    </div>
</div>
  </div>

  <!--COMPANY TAB-->
  <div class="tab-pane fade" id="pills-company" role="tabpanel" aria-labelledby="pills-company-tab">
   
   <div class="row">   
    <div class="mb-2 col-12 col-md-6">
         <div><strong>Sector: </strong><span>{{stock.company.sector}}</span></div>
         <div><strong>CEO: </strong><span>{{stock.company.CEO}}</span></div>
         <div><strong>Tags: </strong><span>{{stock.company.tags}}</span></div>
    </div>
</div>

   <p>
     <a target="_blank" href="{{stock.company.website}}">Website</a><br>
    </p>
    <h5>Profile</h2>
     <p>
        {{stock.company.description}}<br>
    </p>
     {{stock.company.address}} adress1<br>
     {{stock.company.address2}} address2<br>
     {{stock.company.state}} state<br>
     {{stock.company.city}} city<br>
     {{stock.company.country}} country<br>

  </div>

    <!--NEWS TAB-->
  <div class="tab-pane fade" id="pills-chart" role="tabpanel" aria-labelledby="pills-chart-tab">
      {{#each stock.news}}
      <div class="row">

        <div class="col-12 d-flex news-block">
          <div class="col-2 col-md-1">
          <img width="100%" src="{{this.image}}">
          </div>
          <div class="col-10 px-2">
             <div class="col-12"><span class="source-tag">{{this.source}}</span></div>
          <a class="headline-link" href="{{this.url}}">{{this.headline}}</a>
          <div class="col-12 summary"><p>{{this.summary}}</p></div>
          </div>
          </div>

       
      

      </div>
      {{/each}}
  </div>



</div>
</div>





<!--
  
{{#each stock.stats}}
{{@key}} | {{this}}<br>
{{/each}}

  {{#each stock.news}}
{{@key}} | {{this.headline}}<br>
{{@key}} | {{this.source}}<br>
{{@key}} | {{this.summary}}<br>
{{@key}} | {{this.related}}<br>
{{@key}} | {{this.image}}<br>
{{/each}}

{{#each stock.quote}}
{{@key}} | {{this}}<br>
{{/each}}


{{#each stock.company}}
{{@key}} | {{this}}<br>
{{/each}}
-->




<script type="text/javascript" src="https://d3js.org/d3.v5.min.js"></script>

<style>
.ticker-page-header {
    display: flex;
}

#chart{
    margin:0;
    position:relative;
}

svg{
    background-color:transparent;
}

.dot{
   
}

.axis line, .axis path{
    stroke: #bbb;
}

.axis text{
    fill:#bbb;
    font-size:11px;
}
#tooltip{
    position: absolute;
    background-color: #fff;
    padding: 5px 15px;
    color: #333;
    border-radius: 25px;
    z-index: 1050;
    opacity:0;
    font-size: 12px;
}

.axisLabel{
    font-size:11px;
    fill:#bbb;
}

@media(max-width:767px){
  .leftCont,.leftCont{
    flex: 0 0 100%;
  }
  .ticker-page-header{
    flex-direction: column;
  }
}

</style>





<script type="text/javascript">
var screenWidth = window.innerWidth
|| document.documentElement.clientWidth
|| document.body.clientWidth;

if(screenWidth > 700){
  var margin=50, width = 500, height = 250, rValues = [2.5,10];
}

else if(screenWidth > 350 && screenWidth < 700){

var margin=50, width = 350, height = 250, rValues = [2.5,5];
}

else{
  var margin=50, width = 300, height = 250, rValues = [2.5,5];
}

var circles, xScale, yScale;

var parseDate = d3.timeParse("%Y-%m-%d");

    var svg = d3.select('#chart')
    .append('svg')
    .attr('width',width + "px")
    .attr('height',height + 'px')

//.textContent
    var stockSymbolId = document.getElementById("stockSymbol");
    var stockSymbol = stockSymbolId.innerText;

    d3.json('https://cloud.iexapis.com/stable/stock/'+ stockSymbol +'/chart/3m?token=pk_403d2f3af3314f18b2fcbfb21198b874').then(function(data){
       // console.log(data);

      ///// data = data.sort(function(a,b){
  //         return a.charles - b.charles;
   //   })

console.log(stockSymbol)


        xMinMax = d3.extent(data, function(d){
            return parseDate(d.date);
        });

          yMinMax = d3.extent(data, function(d){
            return parseFloat(d.close);
        });

          rMinMax = d3.extent(data, function(d){
            return parseFloat(d.volume);
        });

        console.log(xMinMax)
        console.log(yMinMax)
        console.log(rMinMax)



       xScale = d3.scaleTime()
            .domain([xMinMax[0],xMinMax[1]])
            .range([margin + rValues[1],width-margin-rValues[1]]);

        yScale = d3.scaleLinear()
            .domain([yMinMax[1],yMinMax[0]])
            .range([margin + rValues[1],height-margin-rValues[1]]);

        rScale = d3.scaleLinear()
            .domain([rMinMax[0],rMinMax[1]])
            .range([rValues[0],rValues[1]]);

        cScale = d3.scaleOrdinal()
            .domain([0,1])
            .range(['#eee','#f08d7e']);
        
        
        
       circles = svg.selectAll('.dot')
       .data(data)
       .enter()
       .append('circle')
       .attr('class','dot')
       .attr('cx',function(d){
           //console.log(d);
           return xScale(parseDate(d.date));
       })
       .attr('cy',function(d){
            return yScale(d.close);
       })
       .attr('r',0)
       .attr('fill',function(d){
         if(d.change > 0){
           return '#49dc35';
         }
         else if (d.change < 0){
           return '#dc3545'
         }
         else{
           return '#ccc'
         }
       })
       .attr('stroke','#1a1a1b')
       .style('opacity', 1)
       .on('mouseover', function(d){         
           info = 'Date ' + parseDate(d.date) + '<br>';
           info += 'Close $' + d.close + '<br>';
           info += 'Volume ' + d.volume.toLocaleString() + '<br>';
           d3.select('#tooltip')
            .html(info)
            .style('top', '-10px')
            .style('left', '0')
            .style('opacity', 0.9);
       })
       
       .on('mouseout', function(){         
           d3.select('#tooltip')
            .style('opacity', 0)
       });

       //xAxis = d3.axisBottom(xScale).tickValues([xMinMax[0],xMinMax[1]]);
       //yAxis = d3.axisLeft(yScale).tickValues([yMinMax[0],yMinMax[1]]);

       xAxis = d3.axisBottom(xScale).ticks(5);
       yAxis = d3.axisLeft(yScale).ticks(5);

       xAxisG = svg.append('g')
        .attr('id','xAxis')
        .attr('class','axis')
        .style('color','#000');

         yAxisG = svg.append('g')
        .attr('id','yAxis')
        .attr('class','axis')
        .style('color','#000');

        xAxisG.call(xAxis)
            .attr('transform','translate(0,' + (height-margin) + ')');

        yAxisG.call(yAxis)
        .attr('transform','translate(' + margin + ',0)');



        update();

    });

    function update(){
        circles.transition()
            .delay(function(d,i){
                //console.log(i);
                return i * 15;
            })
            .attr('r', function(d){
            return rScale(d.volume);
       })
    };
</script>